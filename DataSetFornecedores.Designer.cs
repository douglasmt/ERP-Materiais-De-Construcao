//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Apresentacao {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSetFornecedores")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSetFornecedores : global::System.Data.DataSet {
        
        private FORNECEDORESDataTable tableFORNECEDORES;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DataSetFornecedores() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected DataSetFornecedores(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["FORNECEDORES"] != null)) {
                    base.Tables.Add(new FORNECEDORESDataTable(ds.Tables["FORNECEDORES"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FORNECEDORESDataTable FORNECEDORES {
            get {
                return this.tableFORNECEDORES;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DataSetFornecedores cln = ((DataSetFornecedores)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["FORNECEDORES"] != null)) {
                    base.Tables.Add(new FORNECEDORESDataTable(ds.Tables["FORNECEDORES"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableFORNECEDORES = ((FORNECEDORESDataTable)(base.Tables["FORNECEDORES"]));
            if ((initTable == true)) {
                if ((this.tableFORNECEDORES != null)) {
                    this.tableFORNECEDORES.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DataSetFornecedores";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSetFornecedores.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableFORNECEDORES = new FORNECEDORESDataTable();
            base.Tables.Add(this.tableFORNECEDORES);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeFORNECEDORES() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSetFornecedores ds = new DataSetFornecedores();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void FORNECEDORESRowChangeEventHandler(object sender, FORNECEDORESRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FORNECEDORESDataTable : global::System.Data.TypedTableBase<FORNECEDORESRow> {
            
            private global::System.Data.DataColumn columnFORCOD;
            
            private global::System.Data.DataColumn columnFORSTATUS;
            
            private global::System.Data.DataColumn columnFORSITUACAO;
            
            private global::System.Data.DataColumn columnFORNOME;
            
            private global::System.Data.DataColumn columnFORPESSOA;
            
            private global::System.Data.DataColumn columnFORCNPJ;
            
            private global::System.Data.DataColumn columnFORINSC;
            
            private global::System.Data.DataColumn columnFOREND;
            
            private global::System.Data.DataColumn columnFORBAI;
            
            private global::System.Data.DataColumn columnFORCID;
            
            private global::System.Data.DataColumn columnFOREST;
            
            private global::System.Data.DataColumn columnFORCEP;
            
            private global::System.Data.DataColumn columnFORDDD1;
            
            private global::System.Data.DataColumn columnFORFONE1;
            
            private global::System.Data.DataColumn columnFORDDD2;
            
            private global::System.Data.DataColumn columnFORFONE2;
            
            private global::System.Data.DataColumn columnFORDDDFAX;
            
            private global::System.Data.DataColumn columnFORFAX;
            
            private global::System.Data.DataColumn columnFORCONT;
            
            private global::System.Data.DataColumn columnFORCONTDDD;
            
            private global::System.Data.DataColumn columnFORCONTFONE;
            
            private global::System.Data.DataColumn columnFORCONT2;
            
            private global::System.Data.DataColumn columnFORCONT2DDD;
            
            private global::System.Data.DataColumn columnFORCONT2FONE;
            
            private global::System.Data.DataColumn columnFORCONT3;
            
            private global::System.Data.DataColumn columnFORCONT3DDD;
            
            private global::System.Data.DataColumn columnFORCONT3FONE;
            
            private global::System.Data.DataColumn columnFOREMAIL;
            
            private global::System.Data.DataColumn columnFORFANTASIA;
            
            private global::System.Data.DataColumn columnFORDATACAD;
            
            private global::System.Data.DataColumn columnFOROCORR;
            
            private global::System.Data.DataColumn columnFORULTPED;
            
            private global::System.Data.DataColumn columnFORTIPO;
            
            private global::System.Data.DataColumn columnFORCNAE;
            
            private global::System.Data.DataColumn columnFORCODMUNICIPIO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FORNECEDORESDataTable() {
                this.TableName = "FORNECEDORES";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FORNECEDORESDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected FORNECEDORESDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FORCODColumn {
                get {
                    return this.columnFORCOD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FORSTATUSColumn {
                get {
                    return this.columnFORSTATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FORSITUACAOColumn {
                get {
                    return this.columnFORSITUACAO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FORNOMEColumn {
                get {
                    return this.columnFORNOME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FORPESSOAColumn {
                get {
                    return this.columnFORPESSOA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FORCNPJColumn {
                get {
                    return this.columnFORCNPJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FORINSCColumn {
                get {
                    return this.columnFORINSC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FORENDColumn {
                get {
                    return this.columnFOREND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FORBAIColumn {
                get {
                    return this.columnFORBAI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FORCIDColumn {
                get {
                    return this.columnFORCID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FORESTColumn {
                get {
                    return this.columnFOREST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FORCEPColumn {
                get {
                    return this.columnFORCEP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FORDDD1Column {
                get {
                    return this.columnFORDDD1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FORFONE1Column {
                get {
                    return this.columnFORFONE1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FORDDD2Column {
                get {
                    return this.columnFORDDD2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FORFONE2Column {
                get {
                    return this.columnFORFONE2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FORDDDFAXColumn {
                get {
                    return this.columnFORDDDFAX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FORFAXColumn {
                get {
                    return this.columnFORFAX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FORCONTColumn {
                get {
                    return this.columnFORCONT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FORCONTDDDColumn {
                get {
                    return this.columnFORCONTDDD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FORCONTFONEColumn {
                get {
                    return this.columnFORCONTFONE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FORCONT2Column {
                get {
                    return this.columnFORCONT2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FORCONT2DDDColumn {
                get {
                    return this.columnFORCONT2DDD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FORCONT2FONEColumn {
                get {
                    return this.columnFORCONT2FONE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FORCONT3Column {
                get {
                    return this.columnFORCONT3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FORCONT3DDDColumn {
                get {
                    return this.columnFORCONT3DDD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FORCONT3FONEColumn {
                get {
                    return this.columnFORCONT3FONE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FOREMAILColumn {
                get {
                    return this.columnFOREMAIL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FORFANTASIAColumn {
                get {
                    return this.columnFORFANTASIA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FORDATACADColumn {
                get {
                    return this.columnFORDATACAD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FOROCORRColumn {
                get {
                    return this.columnFOROCORR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FORULTPEDColumn {
                get {
                    return this.columnFORULTPED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FORTIPOColumn {
                get {
                    return this.columnFORTIPO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FORCNAEColumn {
                get {
                    return this.columnFORCNAE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FORCODMUNICIPIOColumn {
                get {
                    return this.columnFORCODMUNICIPIO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FORNECEDORESRow this[int index] {
                get {
                    return ((FORNECEDORESRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FORNECEDORESRowChangeEventHandler FORNECEDORESRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FORNECEDORESRowChangeEventHandler FORNECEDORESRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FORNECEDORESRowChangeEventHandler FORNECEDORESRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FORNECEDORESRowChangeEventHandler FORNECEDORESRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddFORNECEDORESRow(FORNECEDORESRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FORNECEDORESRow AddFORNECEDORESRow(
                        decimal FORCOD, 
                        string FORSTATUS, 
                        string FORSITUACAO, 
                        string FORNOME, 
                        string FORPESSOA, 
                        string FORCNPJ, 
                        string FORINSC, 
                        string FOREND, 
                        string FORBAI, 
                        string FORCID, 
                        string FOREST, 
                        decimal FORCEP, 
                        decimal FORDDD1, 
                        string FORFONE1, 
                        decimal FORDDD2, 
                        string FORFONE2, 
                        decimal FORDDDFAX, 
                        string FORFAX, 
                        string FORCONT, 
                        decimal FORCONTDDD, 
                        string FORCONTFONE, 
                        string FORCONT2, 
                        decimal FORCONT2DDD, 
                        string FORCONT2FONE, 
                        string FORCONT3, 
                        decimal FORCONT3DDD, 
                        string FORCONT3FONE, 
                        string FOREMAIL, 
                        string FORFANTASIA, 
                        string FORDATACAD, 
                        string FOROCORR, 
                        string FORULTPED, 
                        string FORTIPO, 
                        string FORCNAE, 
                        int FORCODMUNICIPIO) {
                FORNECEDORESRow rowFORNECEDORESRow = ((FORNECEDORESRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        FORCOD,
                        FORSTATUS,
                        FORSITUACAO,
                        FORNOME,
                        FORPESSOA,
                        FORCNPJ,
                        FORINSC,
                        FOREND,
                        FORBAI,
                        FORCID,
                        FOREST,
                        FORCEP,
                        FORDDD1,
                        FORFONE1,
                        FORDDD2,
                        FORFONE2,
                        FORDDDFAX,
                        FORFAX,
                        FORCONT,
                        FORCONTDDD,
                        FORCONTFONE,
                        FORCONT2,
                        FORCONT2DDD,
                        FORCONT2FONE,
                        FORCONT3,
                        FORCONT3DDD,
                        FORCONT3FONE,
                        FOREMAIL,
                        FORFANTASIA,
                        FORDATACAD,
                        FOROCORR,
                        FORULTPED,
                        FORTIPO,
                        FORCNAE,
                        FORCODMUNICIPIO};
                rowFORNECEDORESRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFORNECEDORESRow);
                return rowFORNECEDORESRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FORNECEDORESRow FindByFORCOD(decimal FORCOD) {
                return ((FORNECEDORESRow)(this.Rows.Find(new object[] {
                            FORCOD})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                FORNECEDORESDataTable cln = ((FORNECEDORESDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FORNECEDORESDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnFORCOD = base.Columns["FORCOD"];
                this.columnFORSTATUS = base.Columns["FORSTATUS"];
                this.columnFORSITUACAO = base.Columns["FORSITUACAO"];
                this.columnFORNOME = base.Columns["FORNOME"];
                this.columnFORPESSOA = base.Columns["FORPESSOA"];
                this.columnFORCNPJ = base.Columns["FORCNPJ"];
                this.columnFORINSC = base.Columns["FORINSC"];
                this.columnFOREND = base.Columns["FOREND"];
                this.columnFORBAI = base.Columns["FORBAI"];
                this.columnFORCID = base.Columns["FORCID"];
                this.columnFOREST = base.Columns["FOREST"];
                this.columnFORCEP = base.Columns["FORCEP"];
                this.columnFORDDD1 = base.Columns["FORDDD1"];
                this.columnFORFONE1 = base.Columns["FORFONE1"];
                this.columnFORDDD2 = base.Columns["FORDDD2"];
                this.columnFORFONE2 = base.Columns["FORFONE2"];
                this.columnFORDDDFAX = base.Columns["FORDDDFAX"];
                this.columnFORFAX = base.Columns["FORFAX"];
                this.columnFORCONT = base.Columns["FORCONT"];
                this.columnFORCONTDDD = base.Columns["FORCONTDDD"];
                this.columnFORCONTFONE = base.Columns["FORCONTFONE"];
                this.columnFORCONT2 = base.Columns["FORCONT2"];
                this.columnFORCONT2DDD = base.Columns["FORCONT2DDD"];
                this.columnFORCONT2FONE = base.Columns["FORCONT2FONE"];
                this.columnFORCONT3 = base.Columns["FORCONT3"];
                this.columnFORCONT3DDD = base.Columns["FORCONT3DDD"];
                this.columnFORCONT3FONE = base.Columns["FORCONT3FONE"];
                this.columnFOREMAIL = base.Columns["FOREMAIL"];
                this.columnFORFANTASIA = base.Columns["FORFANTASIA"];
                this.columnFORDATACAD = base.Columns["FORDATACAD"];
                this.columnFOROCORR = base.Columns["FOROCORR"];
                this.columnFORULTPED = base.Columns["FORULTPED"];
                this.columnFORTIPO = base.Columns["FORTIPO"];
                this.columnFORCNAE = base.Columns["FORCNAE"];
                this.columnFORCODMUNICIPIO = base.Columns["FORCODMUNICIPIO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnFORCOD = new global::System.Data.DataColumn("FORCOD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFORCOD);
                this.columnFORSTATUS = new global::System.Data.DataColumn("FORSTATUS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFORSTATUS);
                this.columnFORSITUACAO = new global::System.Data.DataColumn("FORSITUACAO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFORSITUACAO);
                this.columnFORNOME = new global::System.Data.DataColumn("FORNOME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFORNOME);
                this.columnFORPESSOA = new global::System.Data.DataColumn("FORPESSOA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFORPESSOA);
                this.columnFORCNPJ = new global::System.Data.DataColumn("FORCNPJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFORCNPJ);
                this.columnFORINSC = new global::System.Data.DataColumn("FORINSC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFORINSC);
                this.columnFOREND = new global::System.Data.DataColumn("FOREND", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFOREND);
                this.columnFORBAI = new global::System.Data.DataColumn("FORBAI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFORBAI);
                this.columnFORCID = new global::System.Data.DataColumn("FORCID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFORCID);
                this.columnFOREST = new global::System.Data.DataColumn("FOREST", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFOREST);
                this.columnFORCEP = new global::System.Data.DataColumn("FORCEP", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFORCEP);
                this.columnFORDDD1 = new global::System.Data.DataColumn("FORDDD1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFORDDD1);
                this.columnFORFONE1 = new global::System.Data.DataColumn("FORFONE1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFORFONE1);
                this.columnFORDDD2 = new global::System.Data.DataColumn("FORDDD2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFORDDD2);
                this.columnFORFONE2 = new global::System.Data.DataColumn("FORFONE2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFORFONE2);
                this.columnFORDDDFAX = new global::System.Data.DataColumn("FORDDDFAX", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFORDDDFAX);
                this.columnFORFAX = new global::System.Data.DataColumn("FORFAX", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFORFAX);
                this.columnFORCONT = new global::System.Data.DataColumn("FORCONT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFORCONT);
                this.columnFORCONTDDD = new global::System.Data.DataColumn("FORCONTDDD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFORCONTDDD);
                this.columnFORCONTFONE = new global::System.Data.DataColumn("FORCONTFONE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFORCONTFONE);
                this.columnFORCONT2 = new global::System.Data.DataColumn("FORCONT2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFORCONT2);
                this.columnFORCONT2DDD = new global::System.Data.DataColumn("FORCONT2DDD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFORCONT2DDD);
                this.columnFORCONT2FONE = new global::System.Data.DataColumn("FORCONT2FONE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFORCONT2FONE);
                this.columnFORCONT3 = new global::System.Data.DataColumn("FORCONT3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFORCONT3);
                this.columnFORCONT3DDD = new global::System.Data.DataColumn("FORCONT3DDD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFORCONT3DDD);
                this.columnFORCONT3FONE = new global::System.Data.DataColumn("FORCONT3FONE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFORCONT3FONE);
                this.columnFOREMAIL = new global::System.Data.DataColumn("FOREMAIL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFOREMAIL);
                this.columnFORFANTASIA = new global::System.Data.DataColumn("FORFANTASIA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFORFANTASIA);
                this.columnFORDATACAD = new global::System.Data.DataColumn("FORDATACAD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFORDATACAD);
                this.columnFOROCORR = new global::System.Data.DataColumn("FOROCORR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFOROCORR);
                this.columnFORULTPED = new global::System.Data.DataColumn("FORULTPED", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFORULTPED);
                this.columnFORTIPO = new global::System.Data.DataColumn("FORTIPO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFORTIPO);
                this.columnFORCNAE = new global::System.Data.DataColumn("FORCNAE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFORCNAE);
                this.columnFORCODMUNICIPIO = new global::System.Data.DataColumn("FORCODMUNICIPIO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFORCODMUNICIPIO);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnFORCOD}, true));
                this.columnFORCOD.AllowDBNull = false;
                this.columnFORCOD.Unique = true;
                this.columnFORSTATUS.MaxLength = 1;
                this.columnFORSITUACAO.MaxLength = 1;
                this.columnFORNOME.MaxLength = 50;
                this.columnFORPESSOA.MaxLength = 1;
                this.columnFORCNPJ.MaxLength = 14;
                this.columnFORINSC.MaxLength = 14;
                this.columnFOREND.MaxLength = 50;
                this.columnFORBAI.MaxLength = 20;
                this.columnFORCID.MaxLength = 30;
                this.columnFOREST.MaxLength = 2;
                this.columnFORFONE1.MaxLength = 10;
                this.columnFORFONE2.MaxLength = 10;
                this.columnFORFAX.MaxLength = 10;
                this.columnFORCONT.MaxLength = 30;
                this.columnFORCONTFONE.MaxLength = 10;
                this.columnFORCONT2.MaxLength = 30;
                this.columnFORCONT2FONE.MaxLength = 10;
                this.columnFORCONT3.MaxLength = 30;
                this.columnFORCONT3FONE.MaxLength = 10;
                this.columnFOREMAIL.MaxLength = 30;
                this.columnFORFANTASIA.MaxLength = 60;
                this.columnFORDATACAD.MaxLength = 10;
                this.columnFOROCORR.MaxLength = 1;
                this.columnFORULTPED.MaxLength = 5;
                this.columnFORTIPO.MaxLength = 14;
                this.columnFORCNAE.MaxLength = 7;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FORNECEDORESRow NewFORNECEDORESRow() {
                return ((FORNECEDORESRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FORNECEDORESRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(FORNECEDORESRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FORNECEDORESRowChanged != null)) {
                    this.FORNECEDORESRowChanged(this, new FORNECEDORESRowChangeEvent(((FORNECEDORESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FORNECEDORESRowChanging != null)) {
                    this.FORNECEDORESRowChanging(this, new FORNECEDORESRowChangeEvent(((FORNECEDORESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FORNECEDORESRowDeleted != null)) {
                    this.FORNECEDORESRowDeleted(this, new FORNECEDORESRowChangeEvent(((FORNECEDORESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FORNECEDORESRowDeleting != null)) {
                    this.FORNECEDORESRowDeleting(this, new FORNECEDORESRowChangeEvent(((FORNECEDORESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveFORNECEDORESRow(FORNECEDORESRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetFornecedores ds = new DataSetFornecedores();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FORNECEDORESDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class FORNECEDORESRow : global::System.Data.DataRow {
            
            private FORNECEDORESDataTable tableFORNECEDORES;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FORNECEDORESRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFORNECEDORES = ((FORNECEDORESDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FORCOD {
                get {
                    return ((decimal)(this[this.tableFORNECEDORES.FORCODColumn]));
                }
                set {
                    this[this.tableFORNECEDORES.FORCODColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FORSTATUS {
                get {
                    try {
                        return ((string)(this[this.tableFORNECEDORES.FORSTATUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FORSTATUS\' in table \'FORNECEDORES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFORNECEDORES.FORSTATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FORSITUACAO {
                get {
                    try {
                        return ((string)(this[this.tableFORNECEDORES.FORSITUACAOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FORSITUACAO\' in table \'FORNECEDORES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFORNECEDORES.FORSITUACAOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FORNOME {
                get {
                    try {
                        return ((string)(this[this.tableFORNECEDORES.FORNOMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FORNOME\' in table \'FORNECEDORES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFORNECEDORES.FORNOMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FORPESSOA {
                get {
                    try {
                        return ((string)(this[this.tableFORNECEDORES.FORPESSOAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FORPESSOA\' in table \'FORNECEDORES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFORNECEDORES.FORPESSOAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FORCNPJ {
                get {
                    try {
                        return ((string)(this[this.tableFORNECEDORES.FORCNPJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FORCNPJ\' in table \'FORNECEDORES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFORNECEDORES.FORCNPJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FORINSC {
                get {
                    try {
                        return ((string)(this[this.tableFORNECEDORES.FORINSCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FORINSC\' in table \'FORNECEDORES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFORNECEDORES.FORINSCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FOREND {
                get {
                    try {
                        return ((string)(this[this.tableFORNECEDORES.FORENDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FOREND\' in table \'FORNECEDORES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFORNECEDORES.FORENDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FORBAI {
                get {
                    try {
                        return ((string)(this[this.tableFORNECEDORES.FORBAIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FORBAI\' in table \'FORNECEDORES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFORNECEDORES.FORBAIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FORCID {
                get {
                    try {
                        return ((string)(this[this.tableFORNECEDORES.FORCIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FORCID\' in table \'FORNECEDORES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFORNECEDORES.FORCIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FOREST {
                get {
                    try {
                        return ((string)(this[this.tableFORNECEDORES.FORESTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FOREST\' in table \'FORNECEDORES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFORNECEDORES.FORESTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FORCEP {
                get {
                    try {
                        return ((decimal)(this[this.tableFORNECEDORES.FORCEPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FORCEP\' in table \'FORNECEDORES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFORNECEDORES.FORCEPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FORDDD1 {
                get {
                    try {
                        return ((decimal)(this[this.tableFORNECEDORES.FORDDD1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FORDDD1\' in table \'FORNECEDORES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFORNECEDORES.FORDDD1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FORFONE1 {
                get {
                    try {
                        return ((string)(this[this.tableFORNECEDORES.FORFONE1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FORFONE1\' in table \'FORNECEDORES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFORNECEDORES.FORFONE1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FORDDD2 {
                get {
                    try {
                        return ((decimal)(this[this.tableFORNECEDORES.FORDDD2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FORDDD2\' in table \'FORNECEDORES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFORNECEDORES.FORDDD2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FORFONE2 {
                get {
                    try {
                        return ((string)(this[this.tableFORNECEDORES.FORFONE2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FORFONE2\' in table \'FORNECEDORES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFORNECEDORES.FORFONE2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FORDDDFAX {
                get {
                    try {
                        return ((decimal)(this[this.tableFORNECEDORES.FORDDDFAXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FORDDDFAX\' in table \'FORNECEDORES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFORNECEDORES.FORDDDFAXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FORFAX {
                get {
                    try {
                        return ((string)(this[this.tableFORNECEDORES.FORFAXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FORFAX\' in table \'FORNECEDORES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFORNECEDORES.FORFAXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FORCONT {
                get {
                    try {
                        return ((string)(this[this.tableFORNECEDORES.FORCONTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FORCONT\' in table \'FORNECEDORES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFORNECEDORES.FORCONTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FORCONTDDD {
                get {
                    try {
                        return ((decimal)(this[this.tableFORNECEDORES.FORCONTDDDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FORCONTDDD\' in table \'FORNECEDORES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFORNECEDORES.FORCONTDDDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FORCONTFONE {
                get {
                    try {
                        return ((string)(this[this.tableFORNECEDORES.FORCONTFONEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FORCONTFONE\' in table \'FORNECEDORES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFORNECEDORES.FORCONTFONEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FORCONT2 {
                get {
                    try {
                        return ((string)(this[this.tableFORNECEDORES.FORCONT2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FORCONT2\' in table \'FORNECEDORES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFORNECEDORES.FORCONT2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FORCONT2DDD {
                get {
                    try {
                        return ((decimal)(this[this.tableFORNECEDORES.FORCONT2DDDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FORCONT2DDD\' in table \'FORNECEDORES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFORNECEDORES.FORCONT2DDDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FORCONT2FONE {
                get {
                    try {
                        return ((string)(this[this.tableFORNECEDORES.FORCONT2FONEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FORCONT2FONE\' in table \'FORNECEDORES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFORNECEDORES.FORCONT2FONEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FORCONT3 {
                get {
                    try {
                        return ((string)(this[this.tableFORNECEDORES.FORCONT3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FORCONT3\' in table \'FORNECEDORES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFORNECEDORES.FORCONT3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FORCONT3DDD {
                get {
                    try {
                        return ((decimal)(this[this.tableFORNECEDORES.FORCONT3DDDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FORCONT3DDD\' in table \'FORNECEDORES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFORNECEDORES.FORCONT3DDDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FORCONT3FONE {
                get {
                    try {
                        return ((string)(this[this.tableFORNECEDORES.FORCONT3FONEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FORCONT3FONE\' in table \'FORNECEDORES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFORNECEDORES.FORCONT3FONEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FOREMAIL {
                get {
                    try {
                        return ((string)(this[this.tableFORNECEDORES.FOREMAILColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FOREMAIL\' in table \'FORNECEDORES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFORNECEDORES.FOREMAILColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FORFANTASIA {
                get {
                    try {
                        return ((string)(this[this.tableFORNECEDORES.FORFANTASIAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FORFANTASIA\' in table \'FORNECEDORES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFORNECEDORES.FORFANTASIAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FORDATACAD {
                get {
                    try {
                        return ((string)(this[this.tableFORNECEDORES.FORDATACADColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FORDATACAD\' in table \'FORNECEDORES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFORNECEDORES.FORDATACADColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FOROCORR {
                get {
                    try {
                        return ((string)(this[this.tableFORNECEDORES.FOROCORRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FOROCORR\' in table \'FORNECEDORES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFORNECEDORES.FOROCORRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FORULTPED {
                get {
                    try {
                        return ((string)(this[this.tableFORNECEDORES.FORULTPEDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FORULTPED\' in table \'FORNECEDORES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFORNECEDORES.FORULTPEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FORTIPO {
                get {
                    try {
                        return ((string)(this[this.tableFORNECEDORES.FORTIPOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FORTIPO\' in table \'FORNECEDORES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFORNECEDORES.FORTIPOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FORCNAE {
                get {
                    try {
                        return ((string)(this[this.tableFORNECEDORES.FORCNAEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FORCNAE\' in table \'FORNECEDORES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFORNECEDORES.FORCNAEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FORCODMUNICIPIO {
                get {
                    try {
                        return ((int)(this[this.tableFORNECEDORES.FORCODMUNICIPIOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FORCODMUNICIPIO\' in table \'FORNECEDORES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFORNECEDORES.FORCODMUNICIPIOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFORSTATUSNull() {
                return this.IsNull(this.tableFORNECEDORES.FORSTATUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFORSTATUSNull() {
                this[this.tableFORNECEDORES.FORSTATUSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFORSITUACAONull() {
                return this.IsNull(this.tableFORNECEDORES.FORSITUACAOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFORSITUACAONull() {
                this[this.tableFORNECEDORES.FORSITUACAOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFORNOMENull() {
                return this.IsNull(this.tableFORNECEDORES.FORNOMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFORNOMENull() {
                this[this.tableFORNECEDORES.FORNOMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFORPESSOANull() {
                return this.IsNull(this.tableFORNECEDORES.FORPESSOAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFORPESSOANull() {
                this[this.tableFORNECEDORES.FORPESSOAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFORCNPJNull() {
                return this.IsNull(this.tableFORNECEDORES.FORCNPJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFORCNPJNull() {
                this[this.tableFORNECEDORES.FORCNPJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFORINSCNull() {
                return this.IsNull(this.tableFORNECEDORES.FORINSCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFORINSCNull() {
                this[this.tableFORNECEDORES.FORINSCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFORENDNull() {
                return this.IsNull(this.tableFORNECEDORES.FORENDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFORENDNull() {
                this[this.tableFORNECEDORES.FORENDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFORBAINull() {
                return this.IsNull(this.tableFORNECEDORES.FORBAIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFORBAINull() {
                this[this.tableFORNECEDORES.FORBAIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFORCIDNull() {
                return this.IsNull(this.tableFORNECEDORES.FORCIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFORCIDNull() {
                this[this.tableFORNECEDORES.FORCIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFORESTNull() {
                return this.IsNull(this.tableFORNECEDORES.FORESTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFORESTNull() {
                this[this.tableFORNECEDORES.FORESTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFORCEPNull() {
                return this.IsNull(this.tableFORNECEDORES.FORCEPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFORCEPNull() {
                this[this.tableFORNECEDORES.FORCEPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFORDDD1Null() {
                return this.IsNull(this.tableFORNECEDORES.FORDDD1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFORDDD1Null() {
                this[this.tableFORNECEDORES.FORDDD1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFORFONE1Null() {
                return this.IsNull(this.tableFORNECEDORES.FORFONE1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFORFONE1Null() {
                this[this.tableFORNECEDORES.FORFONE1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFORDDD2Null() {
                return this.IsNull(this.tableFORNECEDORES.FORDDD2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFORDDD2Null() {
                this[this.tableFORNECEDORES.FORDDD2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFORFONE2Null() {
                return this.IsNull(this.tableFORNECEDORES.FORFONE2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFORFONE2Null() {
                this[this.tableFORNECEDORES.FORFONE2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFORDDDFAXNull() {
                return this.IsNull(this.tableFORNECEDORES.FORDDDFAXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFORDDDFAXNull() {
                this[this.tableFORNECEDORES.FORDDDFAXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFORFAXNull() {
                return this.IsNull(this.tableFORNECEDORES.FORFAXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFORFAXNull() {
                this[this.tableFORNECEDORES.FORFAXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFORCONTNull() {
                return this.IsNull(this.tableFORNECEDORES.FORCONTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFORCONTNull() {
                this[this.tableFORNECEDORES.FORCONTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFORCONTDDDNull() {
                return this.IsNull(this.tableFORNECEDORES.FORCONTDDDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFORCONTDDDNull() {
                this[this.tableFORNECEDORES.FORCONTDDDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFORCONTFONENull() {
                return this.IsNull(this.tableFORNECEDORES.FORCONTFONEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFORCONTFONENull() {
                this[this.tableFORNECEDORES.FORCONTFONEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFORCONT2Null() {
                return this.IsNull(this.tableFORNECEDORES.FORCONT2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFORCONT2Null() {
                this[this.tableFORNECEDORES.FORCONT2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFORCONT2DDDNull() {
                return this.IsNull(this.tableFORNECEDORES.FORCONT2DDDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFORCONT2DDDNull() {
                this[this.tableFORNECEDORES.FORCONT2DDDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFORCONT2FONENull() {
                return this.IsNull(this.tableFORNECEDORES.FORCONT2FONEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFORCONT2FONENull() {
                this[this.tableFORNECEDORES.FORCONT2FONEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFORCONT3Null() {
                return this.IsNull(this.tableFORNECEDORES.FORCONT3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFORCONT3Null() {
                this[this.tableFORNECEDORES.FORCONT3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFORCONT3DDDNull() {
                return this.IsNull(this.tableFORNECEDORES.FORCONT3DDDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFORCONT3DDDNull() {
                this[this.tableFORNECEDORES.FORCONT3DDDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFORCONT3FONENull() {
                return this.IsNull(this.tableFORNECEDORES.FORCONT3FONEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFORCONT3FONENull() {
                this[this.tableFORNECEDORES.FORCONT3FONEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFOREMAILNull() {
                return this.IsNull(this.tableFORNECEDORES.FOREMAILColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFOREMAILNull() {
                this[this.tableFORNECEDORES.FOREMAILColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFORFANTASIANull() {
                return this.IsNull(this.tableFORNECEDORES.FORFANTASIAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFORFANTASIANull() {
                this[this.tableFORNECEDORES.FORFANTASIAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFORDATACADNull() {
                return this.IsNull(this.tableFORNECEDORES.FORDATACADColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFORDATACADNull() {
                this[this.tableFORNECEDORES.FORDATACADColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFOROCORRNull() {
                return this.IsNull(this.tableFORNECEDORES.FOROCORRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFOROCORRNull() {
                this[this.tableFORNECEDORES.FOROCORRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFORULTPEDNull() {
                return this.IsNull(this.tableFORNECEDORES.FORULTPEDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFORULTPEDNull() {
                this[this.tableFORNECEDORES.FORULTPEDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFORTIPONull() {
                return this.IsNull(this.tableFORNECEDORES.FORTIPOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFORTIPONull() {
                this[this.tableFORNECEDORES.FORTIPOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFORCNAENull() {
                return this.IsNull(this.tableFORNECEDORES.FORCNAEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFORCNAENull() {
                this[this.tableFORNECEDORES.FORCNAEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFORCODMUNICIPIONull() {
                return this.IsNull(this.tableFORNECEDORES.FORCODMUNICIPIOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFORCODMUNICIPIONull() {
                this[this.tableFORNECEDORES.FORCODMUNICIPIOColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class FORNECEDORESRowChangeEvent : global::System.EventArgs {
            
            private FORNECEDORESRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FORNECEDORESRowChangeEvent(FORNECEDORESRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FORNECEDORESRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Apresentacao.DataSetFornecedoresTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class FORNECEDORESTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.Odbc.OdbcDataAdapter _adapter;
        
        private global::System.Data.Odbc.OdbcConnection _connection;
        
        private global::System.Data.Odbc.OdbcTransaction _transaction;
        
        private global::System.Data.Odbc.OdbcCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public FORNECEDORESTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.Odbc.OdbcDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Odbc.OdbcConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.Odbc.OdbcCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Odbc.OdbcTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.Odbc.OdbcCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.Odbc.OdbcDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "FORNECEDORES";
            tableMapping.ColumnMappings.Add("FORCOD", "FORCOD");
            tableMapping.ColumnMappings.Add("FORSTATUS", "FORSTATUS");
            tableMapping.ColumnMappings.Add("FORSITUACAO", "FORSITUACAO");
            tableMapping.ColumnMappings.Add("FORNOME", "FORNOME");
            tableMapping.ColumnMappings.Add("FORPESSOA", "FORPESSOA");
            tableMapping.ColumnMappings.Add("FORCNPJ", "FORCNPJ");
            tableMapping.ColumnMappings.Add("FORINSC", "FORINSC");
            tableMapping.ColumnMappings.Add("FOREND", "FOREND");
            tableMapping.ColumnMappings.Add("FORBAI", "FORBAI");
            tableMapping.ColumnMappings.Add("FORCID", "FORCID");
            tableMapping.ColumnMappings.Add("FOREST", "FOREST");
            tableMapping.ColumnMappings.Add("FORCEP", "FORCEP");
            tableMapping.ColumnMappings.Add("FORDDD1", "FORDDD1");
            tableMapping.ColumnMappings.Add("FORFONE1", "FORFONE1");
            tableMapping.ColumnMappings.Add("FORDDD2", "FORDDD2");
            tableMapping.ColumnMappings.Add("FORFONE2", "FORFONE2");
            tableMapping.ColumnMappings.Add("FORDDDFAX", "FORDDDFAX");
            tableMapping.ColumnMappings.Add("FORFAX", "FORFAX");
            tableMapping.ColumnMappings.Add("FORCONT", "FORCONT");
            tableMapping.ColumnMappings.Add("FORCONTDDD", "FORCONTDDD");
            tableMapping.ColumnMappings.Add("FORCONTFONE", "FORCONTFONE");
            tableMapping.ColumnMappings.Add("FORCONT2", "FORCONT2");
            tableMapping.ColumnMappings.Add("FORCONT2DDD", "FORCONT2DDD");
            tableMapping.ColumnMappings.Add("FORCONT2FONE", "FORCONT2FONE");
            tableMapping.ColumnMappings.Add("FORCONT3", "FORCONT3");
            tableMapping.ColumnMappings.Add("FORCONT3DDD", "FORCONT3DDD");
            tableMapping.ColumnMappings.Add("FORCONT3FONE", "FORCONT3FONE");
            tableMapping.ColumnMappings.Add("FOREMAIL", "FOREMAIL");
            tableMapping.ColumnMappings.Add("FORFANTASIA", "FORFANTASIA");
            tableMapping.ColumnMappings.Add("FORDATACAD", "FORDATACAD");
            tableMapping.ColumnMappings.Add("FOROCORR", "FOROCORR");
            tableMapping.ColumnMappings.Add("FORULTPED", "FORULTPED");
            tableMapping.ColumnMappings.Add("FORTIPO", "FORTIPO");
            tableMapping.ColumnMappings.Add("FORCNAE", "FORCNAE");
            tableMapping.ColumnMappings.Add("FORCODMUNICIPIO", "FORCODMUNICIPIO");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.Odbc.OdbcCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""FORNECEDORES"" (""FORCOD"", ""FORSTATUS"", ""FORSITUACAO"", ""FORNOME"", ""FORPESSOA"", ""FORCNPJ"", ""FORINSC"", ""FOREND"", ""FORBAI"", ""FORCID"", ""FOREST"", ""FORCEP"", ""FORDDD1"", ""FORFONE1"", ""FORDDD2"", ""FORFONE2"", ""FORDDDFAX"", ""FORFAX"", ""FORCONT"", ""FORCONTDDD"", ""FORCONTFONE"", ""FORCONT2"", ""FORCONT2DDD"", ""FORCONT2FONE"", ""FORCONT3"", ""FORCONT3DDD"", ""FORCONT3FONE"", ""FOREMAIL"", ""FORFANTASIA"", ""FORDATACAD"", ""FOROCORR"", ""FORULTPED"", ""FORTIPO"", ""FORCNAE"", ""FORCODMUNICIPIO"") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("FORCOD", global::System.Data.Odbc.OdbcType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(9)), ((byte)(0)), "FORCOD", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("FORSTATUS", global::System.Data.Odbc.OdbcType.Char, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FORSTATUS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("FORSITUACAO", global::System.Data.Odbc.OdbcType.Char, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FORSITUACAO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("FORNOME", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FORNOME", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("FORPESSOA", global::System.Data.Odbc.OdbcType.Char, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FORPESSOA", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("FORCNPJ", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FORCNPJ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("FORINSC", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FORINSC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("FOREND", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FOREND", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("FORBAI", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FORBAI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("FORCID", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FORCID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("FOREST", global::System.Data.Odbc.OdbcType.Char, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FOREST", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("FORCEP", global::System.Data.Odbc.OdbcType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(9)), ((byte)(0)), "FORCEP", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("FORDDD1", global::System.Data.Odbc.OdbcType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(4)), ((byte)(0)), "FORDDD1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("FORFONE1", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FORFONE1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("FORDDD2", global::System.Data.Odbc.OdbcType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(4)), ((byte)(0)), "FORDDD2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("FORFONE2", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FORFONE2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("FORDDDFAX", global::System.Data.Odbc.OdbcType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(4)), ((byte)(0)), "FORDDDFAX", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("FORFAX", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FORFAX", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("FORCONT", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FORCONT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("FORCONTDDD", global::System.Data.Odbc.OdbcType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(4)), ((byte)(0)), "FORCONTDDD", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("FORCONTFONE", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FORCONTFONE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("FORCONT2", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FORCONT2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("FORCONT2DDD", global::System.Data.Odbc.OdbcType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(4)), ((byte)(0)), "FORCONT2DDD", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("FORCONT2FONE", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FORCONT2FONE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("FORCONT3", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FORCONT3", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("FORCONT3DDD", global::System.Data.Odbc.OdbcType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(4)), ((byte)(0)), "FORCONT3DDD", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("FORCONT3FONE", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FORCONT3FONE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("FOREMAIL", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FOREMAIL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("FORFANTASIA", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FORFANTASIA", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("FORDATACAD", global::System.Data.Odbc.OdbcType.Char, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FORDATACAD", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("FOROCORR", global::System.Data.Odbc.OdbcType.Char, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FOROCORR", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("FORULTPED", global::System.Data.Odbc.OdbcType.Char, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FORULTPED", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("FORTIPO", global::System.Data.Odbc.OdbcType.Char, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FORTIPO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("FORCNAE", global::System.Data.Odbc.OdbcType.Char, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FORCNAE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("FORCODMUNICIPIO", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FORCODMUNICIPIO", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.Odbc.OdbcConnection();
            this._connection.ConnectionString = global::Apresentacao.Properties.Settings.Default.ConnectionStringConstrucao;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.Odbc.OdbcCommand[1];
            this._commandCollection[0] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT ""FORCOD"", ""FORSTATUS"", ""FORSITUACAO"", ""FORNOME"", ""FORPESSOA"", ""FORCNPJ"", ""FORINSC"", ""FOREND"", ""FORBAI"", ""FORCID"", ""FOREST"", ""FORCEP"", ""FORDDD1"", ""FORFONE1"", ""FORDDD2"", ""FORFONE2"", ""FORDDDFAX"", ""FORFAX"", ""FORCONT"", ""FORCONTDDD"", ""FORCONTFONE"", ""FORCONT2"", ""FORCONT2DDD"", ""FORCONT2FONE"", ""FORCONT3"", ""FORCONT3DDD"", ""FORCONT3FONE"", ""FOREMAIL"", ""FORFANTASIA"", ""FORDATACAD"", ""FOROCORR"", ""FORULTPED"", ""FORTIPO"", ""FORCNAE"", ""FORCODMUNICIPIO"" FROM ""FORNECEDORES""";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetFornecedores.FORNECEDORESDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetFornecedores.FORNECEDORESDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSetFornecedores.FORNECEDORESDataTable dataTable = new DataSetFornecedores.FORNECEDORESDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSetFornecedores.FORNECEDORESDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSetFornecedores dataSet) {
            return this.Adapter.Update(dataSet, "FORNECEDORES");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    decimal FORCOD, 
                    string FORSTATUS, 
                    string FORSITUACAO, 
                    string FORNOME, 
                    string FORPESSOA, 
                    string FORCNPJ, 
                    string FORINSC, 
                    string FOREND, 
                    string FORBAI, 
                    string FORCID, 
                    string FOREST, 
                    decimal FORCEP, 
                    decimal FORDDD1, 
                    string FORFONE1, 
                    decimal FORDDD2, 
                    string FORFONE2, 
                    decimal FORDDDFAX, 
                    string FORFAX, 
                    string FORCONT, 
                    decimal FORCONTDDD, 
                    string FORCONTFONE, 
                    string FORCONT2, 
                    decimal FORCONT2DDD, 
                    string FORCONT2FONE, 
                    string FORCONT3, 
                    decimal FORCONT3DDD, 
                    string FORCONT3FONE, 
                    string FOREMAIL, 
                    string FORFANTASIA, 
                    string FORDATACAD, 
                    string FOROCORR, 
                    string FORULTPED, 
                    string FORTIPO, 
                    string FORCNAE, 
                    int FORCODMUNICIPIO) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(FORCOD));
            if ((FORSTATUS == null)) {
                throw new global::System.ArgumentNullException("FORSTATUS");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(FORSTATUS));
            }
            if ((FORSITUACAO == null)) {
                throw new global::System.ArgumentNullException("FORSITUACAO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(FORSITUACAO));
            }
            if ((FORNOME == null)) {
                throw new global::System.ArgumentNullException("FORNOME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(FORNOME));
            }
            if ((FORPESSOA == null)) {
                throw new global::System.ArgumentNullException("FORPESSOA");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(FORPESSOA));
            }
            if ((FORCNPJ == null)) {
                throw new global::System.ArgumentNullException("FORCNPJ");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(FORCNPJ));
            }
            if ((FORINSC == null)) {
                throw new global::System.ArgumentNullException("FORINSC");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(FORINSC));
            }
            if ((FOREND == null)) {
                throw new global::System.ArgumentNullException("FOREND");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(FOREND));
            }
            if ((FORBAI == null)) {
                throw new global::System.ArgumentNullException("FORBAI");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(FORBAI));
            }
            if ((FORCID == null)) {
                throw new global::System.ArgumentNullException("FORCID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(FORCID));
            }
            if ((FOREST == null)) {
                throw new global::System.ArgumentNullException("FOREST");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(FOREST));
            }
            this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(FORCEP));
            this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(FORDDD1));
            if ((FORFONE1 == null)) {
                throw new global::System.ArgumentNullException("FORFONE1");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(FORFONE1));
            }
            this.Adapter.InsertCommand.Parameters[14].Value = ((decimal)(FORDDD2));
            if ((FORFONE2 == null)) {
                throw new global::System.ArgumentNullException("FORFONE2");
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(FORFONE2));
            }
            this.Adapter.InsertCommand.Parameters[16].Value = ((decimal)(FORDDDFAX));
            if ((FORFAX == null)) {
                throw new global::System.ArgumentNullException("FORFAX");
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(FORFAX));
            }
            if ((FORCONT == null)) {
                throw new global::System.ArgumentNullException("FORCONT");
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(FORCONT));
            }
            this.Adapter.InsertCommand.Parameters[19].Value = ((decimal)(FORCONTDDD));
            if ((FORCONTFONE == null)) {
                throw new global::System.ArgumentNullException("FORCONTFONE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(FORCONTFONE));
            }
            if ((FORCONT2 == null)) {
                throw new global::System.ArgumentNullException("FORCONT2");
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(FORCONT2));
            }
            this.Adapter.InsertCommand.Parameters[22].Value = ((decimal)(FORCONT2DDD));
            if ((FORCONT2FONE == null)) {
                throw new global::System.ArgumentNullException("FORCONT2FONE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(FORCONT2FONE));
            }
            if ((FORCONT3 == null)) {
                throw new global::System.ArgumentNullException("FORCONT3");
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(FORCONT3));
            }
            this.Adapter.InsertCommand.Parameters[25].Value = ((decimal)(FORCONT3DDD));
            if ((FORCONT3FONE == null)) {
                throw new global::System.ArgumentNullException("FORCONT3FONE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(FORCONT3FONE));
            }
            if ((FOREMAIL == null)) {
                throw new global::System.ArgumentNullException("FOREMAIL");
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(FOREMAIL));
            }
            if ((FORFANTASIA == null)) {
                throw new global::System.ArgumentNullException("FORFANTASIA");
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(FORFANTASIA));
            }
            if ((FORDATACAD == null)) {
                throw new global::System.ArgumentNullException("FORDATACAD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(FORDATACAD));
            }
            if ((FOROCORR == null)) {
                throw new global::System.ArgumentNullException("FOROCORR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(FOROCORR));
            }
            if ((FORULTPED == null)) {
                throw new global::System.ArgumentNullException("FORULTPED");
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(FORULTPED));
            }
            if ((FORTIPO == null)) {
                throw new global::System.ArgumentNullException("FORTIPO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(FORTIPO));
            }
            if ((FORCNAE == null)) {
                throw new global::System.ArgumentNullException("FORCNAE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(FORCNAE));
            }
            this.Adapter.InsertCommand.Parameters[34].Value = ((int)(FORCODMUNICIPIO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private FORNECEDORESTableAdapter _fORNECEDORESTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public FORNECEDORESTableAdapter FORNECEDORESTableAdapter {
            get {
                return this._fORNECEDORESTableAdapter;
            }
            set {
                this._fORNECEDORESTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._fORNECEDORESTableAdapter != null) 
                            && (this._fORNECEDORESTableAdapter.Connection != null))) {
                    return this._fORNECEDORESTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._fORNECEDORESTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(DataSetFornecedores dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._fORNECEDORESTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.FORNECEDORES.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._fORNECEDORESTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(DataSetFornecedores dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._fORNECEDORESTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.FORNECEDORES.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._fORNECEDORESTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(DataSetFornecedores dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._fORNECEDORESTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.FORNECEDORES.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._fORNECEDORESTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(DataSetFornecedores dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._fORNECEDORESTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._fORNECEDORESTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._fORNECEDORESTableAdapter != null)) {
                    revertConnections.Add(this._fORNECEDORESTableAdapter, this._fORNECEDORESTableAdapter.Connection);
                    this._fORNECEDORESTableAdapter.Connection = ((global::System.Data.Odbc.OdbcConnection)(workConnection));
                    this._fORNECEDORESTableAdapter.Transaction = ((global::System.Data.Odbc.OdbcTransaction)(workTransaction));
                    if (this._fORNECEDORESTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._fORNECEDORESTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._fORNECEDORESTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._fORNECEDORESTableAdapter != null)) {
                    this._fORNECEDORESTableAdapter.Connection = ((global::System.Data.Odbc.OdbcConnection)(revertConnections[this._fORNECEDORESTableAdapter]));
                    this._fORNECEDORESTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591